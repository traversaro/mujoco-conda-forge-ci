name: C++ CI Workflow

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch or release of mujoco to test.'
        required: true
        default: 'main'
  push:
  pull_request:
  schedule:
  # * is a special character in YAML so you have to quote this string
  # Execute a "nightly" build at 2 AM UTC
  - cron:  '0 2 * * *'

jobs:
  build-with-conda-dependencies:
    name: '[conda:${{ matrix.os }}]'
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        build_type: [Release]
        os: [ubuntu-20.04, macos-latest, windows-2019]

    steps:
    - uses: actions/checkout@v3

    - name: Print used environment (no conda)
      shell: bash
      run: |
        env
    - name: Get current week
      id: week
      run: echo "week=$(date +%Y-%U)" >> "${GITHUB_OUTPUT}"
    - uses: mamba-org/setup-micromamba@v1
      with:
        environment-file: ci_env.yml
        cache-environment-key: environment-${{ steps.week.outputs.week }}

    - name: Configure VS Toolchain (Windows)
      if: contains(matrix.os, 'windows')
      uses: ilammy/msvc-dev-cmd@v1.12.1
      
    - name: Setup branch or tag to use
      if: github.event_name == 'workflow_dispatch'
      shell: bash -l {0}
      run: |
        echo "MUJOCO_BRANCH=${{ github.event.inputs.branch }}" >> $GITHUB_ENV

    - name: Setup branch or tag to use
      if: github.event_name != 'workflow_dispatch'
      shell: bash -l {0}
      run: |
        echo "MUJOCO_BRANCH=usesystemdepsoptions" >> $GITHUB_ENV

    - name: Setup compilation env variables [Conda/Windows]
      if: contains(matrix.os, 'windows')
      shell: bash -l {0}
      run: |
        bash_vc_install=${VCToolsInstallDir//\\//}        
        compiler_path=${bash_vc_install}bin/Hostx64/x64/cl.exe
        echo "CC=${compiler_path}" >> $GITHUB_ENV
        echo "CXX=${compiler_path}" >> $GITHUB_ENV
        echo "CONDA_CXX_LIBRARIES_INSTALL_PREFIX=${CONDA_PREFIX}\Library" >> $GITHUB_ENV

    - name: Setup compilation env variables [Conda/Linux&macOS]
      if: contains(matrix.os, 'macos') || contains(matrix.os, 'ubuntu')
      shell: bash -l {0}
      run: |
        echo "CONDA_CXX_LIBRARIES_INSTALL_PREFIX=${CONDA_PREFIX}" >> $GITHUB_ENV

    - name: Print used environment
      shell: bash -l {0}
      run: |
        micromamba list
        env
    
    # Need to be installed manually as there is no recent release of tinyobjloader
    - name: Install tinyobjloader
      shell: bash -l {0}
      run: |
        git clone https://github.com/tinyobjloader/tinyobjloader
        cd tinyobjloader
        git checkout v2.0.0rc10
        mkdir build
        cd build
        cmake -GNinja .. -DCMAKE_INSTALL_PREFIX=${CONDA_CXX_LIBRARIES_INSTALL_PREFIX} -DBUILD_SHARED_LIBS:BOOL=ON
     
    - name: Clone
      shell: bash -l {0}
      run: |
        git clone https://github.com/traversaro/mujoco
        cd mujoco
        git checkout ${MUJOCO_BRANCH}

    - name: Configure
      shell: bash -l {0}
      run: |
        cd mujoco
        mkdir build
        cd build
        cmake -GNinja -DCMAKE_INSTALL_PREFIX=${CONDA_CXX_LIBRARIES_INSTALL_PREFIX} -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DBUILD_SHARED_LIBS:BOOL=ON -DBUILD_TESTING:BOOL=ON -DMUJOCO_BUILD_TESTS:BOOL=ON -DMUJOCO_BUILD_SIMULATE:BOOL=OFF -DMUJOCO_BUILD_EXAMPLES:BOOL=OFF -DMUJOCO_ENABLE_AVX:BOOL=OFF -DMUJOCO_ENABLE_AVX_INTRINSICS:BOOL=OFF -DCMAKE_INTERPROCEDURAL_OPTIMIZATION:BOOL=ON -DMUJOCO_INSTALL_PLUGINS:BOOL=ON \
                      -DMUJOCO_USE_SYSTEM_lodepng:BOOL=ON -DMUJOCO_USE_SYSTEM_qhull:BOOL=ON -DMUJOCO_USE_SYSTEM_tinyxml2:BOOL=ON -DMUJOCO_USE_SYSTEM_tinyobjloader:BOOL=ON -DMUJOCO_USE_SYSTEM_ccd:BOOL=ON -DMUJOCO_USE_SYSTEM_abseil:BOOL=ON -DMUJOCO_USE_SYSTEM_gtest:BOOL=ON -DMUJOCO_USE_SYSTEM_benchmark:BOOL=ON -DMUJOCO_USE_SYSTEM_Eigen3:BOOL=ON ..

    - name: Build
      shell: bash -l {0}
      run: |
        cd mujoco/build
        cmake --build . --config ${{ matrix.build_type }}

    - name: Test
      shell: bash -l {0}
      run: |
        cd mujoco/build
        ctest --output-on-failure -C ${{ matrix.build_type }} .

    - name: Install
      shell: bash -l {0}
      run: |
        cd mujoco/build
        cmake --install . --config ${{ matrix.build_type }}
